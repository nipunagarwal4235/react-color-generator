{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICqBvDC,EAxBK,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,IAAMC,EAA+B,EAA/BA,OAASC,EAAsB,EAAtBA,MAAsB,KAAdC,SAChBC,oBAAS,IADqB,mBAClDC,EADkD,KAC1CC,EAD0C,KAEnDC,EAAMP,EAAIQ,KAAK,KACfhB,EAAMG,EAAQ,WAAR,cAAYK,IACxBS,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBL,GAAS,KACP,KACL,OAAO,kBAAIM,aAAaF,MACtB,CAACL,IAMJ,OACE,6BAASQ,UAAS,gBAAWX,EAAM,IAAM,eAAiBY,MAAO,CAACC,gBAAgB,OAAD,OAASR,EAAT,MAAkBS,QANlF,WACjBV,GAAS,GACTW,UAAUC,UAAUC,UAAU3B,KAK5B,uBAAGqB,UAAU,iBAAiBZ,EAA9B,KACA,uBAAGY,UAAU,eAAerB,GAC3Ba,GAAS,uBAAGQ,UAAU,SAAb,yB,gBCgBDO,MAjCf,WAAgB,IAAD,EACehB,mBAAS,IADxB,mBACNiB,EADM,KACEC,EADF,OAEclB,oBAAS,GAFvB,mBAENmB,EAFM,KAEEC,EAFF,OAGYpB,mBAAS,IAAIqB,IAAO,WAAWC,IAAI,KAH/C,mBAGNC,EAHM,KAGCC,EAHD,KAeb,OACE,oCACA,6BAASf,UAAU,aACjB,+CACA,0BAAMgB,SAdW,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACR,MAAOT,GACPC,GAAS,MASP,2BAAOS,KAAK,OAAOC,MAAOb,EAAOc,SAAU,SAACL,GAAD,OAAOR,EAASQ,EAAEM,OAAOF,QAAQG,YAAY,UAAUxB,UAAS,UAAKU,EAAQ,QAAU,QAClI,4BAAQV,UAAU,MAAMoB,KAAK,UAA7B,YAGJ,6BAASpB,UAAU,UAChBc,EAAKW,KAAI,SAACjB,EAAQnB,GACjB,OAAO,kBAAC,EAAD,eAAaqC,IAAKrC,GAAWmB,EAA7B,CAAoCnB,MAAOA,WC1B1DsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6c7dd8ae.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({rgb , weight , index , hexColor}) => {\n  const [alert , setAlert] = useState(false)\n  const bcg = rgb.join(',')\n  const hex = rgbToHex(...rgb);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setAlert(false)\n    } , 3000)\n   return ()=>clearTimeout(timeout)\n  }, [alert])\n  let clickHandler = () => {\n    setAlert(true);\n    navigator.clipboard.writeText(hex)\n  }\n\n  return (\n    <article className={`color ${index>10 && 'color-light'}`} style={{backgroundColor: `rgb(${bcg})`}} onClick={clickHandler}>\n      <p className='percent-value'>{weight}%</p>\n      <p className='color-value'>{hex}</p>\n      {alert && <p className='alert'>Copied To Clipboard</p>}\n    </article>\n  )\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nfunction App() {\n  const [color , setColor ] = useState('');\n  const [error , setError] = useState(false);\n  const [list , setList] = useState(new Values('#f5f5f5').all(10));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10)\n      setList(colors)\n    } catch (error) {\n      setError(true)\n    }\n  }\n\n  return (\n    <>\n    <section className='container'>\n      <h3>Color Generator</h3>\n      <form onSubmit={handleSubmit}>\n        <input type='text' value={color} onChange={(e) => setColor(e.target.value)} placeholder='#f5f5f5' className={`${error ? 'error' : null}`}></input>\n        <button className='btn' type='submit'>Submit</button>\n      </form>\n    </section>\n    <section className='colors'>\n      {list.map((color , index) => {\n        return <SingleColor key={index} {...color} index={index}></SingleColor>\n      })}\n    </section>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}